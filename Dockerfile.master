FROM ghcr.io/agpsn/docker-base:alpine
 
#MAIN
ARG SVERSION
ARG UVERSION=6.2.6
ARG LBRANCH="develop"
ENV PYTHONIOENCODING=utf-8

RUN set -xe && echo "***** update system packages *****" apk upgrade --no-cache && \
RUN set -xe && echo "***** install build deps *****" && apk add --no-cache --virtual=deps build-base libffi-dev openssl-dev python3-dev
RUN set -xe && echo "***** install runtime packages *****" && apk add --no-cache xmlstarlet icu-libs par2cmdline
RUN set -xe && echo "***** install sabnzbd/unrar *****" && mkdir /tmp/unrar && curl -o /tmp/unrar.tar.gz -L "https://www.rarlab.com/rar/unrarsrc-${UVERSION}.tar.gz" && tar xf /tmp/unrar.tar.gz -C /tmp/unrar --strip-components=1 && cd /tmp/unrar && make && install -v -m755 unrar /usr/local/bin
RUN set -xe && echo "**** install sabnzbd ****" && if [ -z ${SVERSION+x} ]; then SVERSION=$(curl -s "https://api.github.com/repos/sabnzbd/sabnzbd/releases/latest" | awk '/tag_name/{print $4;exit}' FS='[""]'); fi && mkdir -p /app/sabnzbd && curl -o /tmp/sabnzbd.tar.gz -L "https://github.com/sabnzbd/sabnzbd/releases/download/${SVERSION}/SABnzbd-${SVERSION}-src.tar.gz" && tar xf /tmp/sabnzbd.tar.gz -C /app/sabnzbd --strip-components=1 && cd /app/sabnzbd && python3 -m ensurepip --upgrade && pip3 install -U --no-cache-dir pip apprise pynzb requests && pip3 install -U --no-cache-dir -r requirements.txt

#	echo "***** install lidarr *****" && if [ -z ${LVERSION+x} ]; then LVERSION=$(curl -sL "https://lidarr.servarr.com/v1/update/${LBRANCH}/changes?runtime=netcore&os=linuxmusl" | jq -r '.[0].version'); fi && mkdir -p "${APP_DIR}/lidarr/bin" && curl -o /tmp/lidarr.tar.gz -L "https://lidarr.servarr.com/v1/update/${LBRANCH}/updatefile?version=${LVERSION}&os=linuxmusl&runtime=netcore&arch=x64" && tar xzf /tmp/lidarr.tar.gz -C "${APP_DIR}/lidarr/bin" --strip-components=1 && printf "UpdateMethod=docker\nBranch=${LBRANCH}\nPackageVersion=${LVERSION} [${LBRANCH}]\nPackageAuthor=[agpsn](https://github.com/agpsn/lidarr-develop)\n" >"${APP_DIR}/lidarr/package_info" && \
#	echo "***** cleanup *****" && rm -rf /tmp/* && \
#	echo "***** setting version *****" && echo $LVERSION > "${APP_DIR}/lidarr/app_version"

# add local files
#COPY root/ /

# healthcheck
HEALTHCHECK  --interval=30s --timeout=30s --start-period=10s --retries=5 CMD curl --fail http://localhost:8080 || exit 1

# label
LABEL org.opencontainers.image.source="https://github.com/agpsn/sabnzbd-develop"

# ports and volumes
EXPOSE 8080
VOLUME "${CONFIG_DIR}"


###
###

#echo "**** cleanup ****" && apk del --purge build-dependencies && rm -rf /tmp/* $HOME/.cache
